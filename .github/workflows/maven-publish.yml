name: CI/CD Pipeline

on:
  push:
    branches: [ "master" ]

env:
  DOCKER_IMAGE: gabrielsonnino/java-app:latest

jobs:
  # CI Job: Build and Push Docker Image
  ci:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Step 3: Build the Maven application
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Step 4: Build Docker image
    - name: Build Docker image
      run: |
        docker build -t my-app:latest .
        docker tag my-app:latest ${{ env.DOCKER_IMAGE }}
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    # Step 5: Push Docker image to DockerHub
    - name: Push Docker image
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push ${{ env.DOCKER_IMAGE }}
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  # CD Job: Deploy to EC2
  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
    # Step 1: Deploy container on EC2 host
    - name: Deploy container on EC2 host
      uses: appleboy/ssh-action@master
      with:
        host: ${{ vars.SSH_HOST }}
        username: ${{ vars.USER_NAME }}
        key: ${{ secrets.DEPLOY_KEY }}
        port: 22
        script: |
          docker pull ${{ env.DOCKER_IMAGE }}
          docker stop my-app || true
          docker rm my-app || true
          docker run -d --name my-app --restart always -p 8080:8080 ${{ env.DOCKER_IMAGE }}


